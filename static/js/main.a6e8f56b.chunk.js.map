{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Header/Header.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["ContactForm","onCreate","useState","name","setName","number","setNumber","changeHandler","e","preventDefault","currentTarget","value","className","action","onSubmit","id","generate","alert","htmlFor","type","autoComplete","onChange","ContactList","contacts","onDelete","map","onClick","Filter","onFilterChanged","target","Header","state","setState","useEffect","SwitchTransition","mode","CSSTransition","addEndListener","node","done","addEventListener","classNames","App","filter","setFilter","key","defaultValue","JSON","parse","window","localStorage","getItem","setItem","stringify","useLocalStorage","setContacts","saveContacts","newContact","find","f","toLowerCase","includes","filteredContacts","removeItemId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6e8f56b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { generate } from 'shortid';\nimport './ContactForm.css';\n\nexport default function ContactForm({ onCreate }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const changeHandler = e => {\n    e.preventDefault();\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (name === '' || number === '') {\n      alert('You need to specify the name and phone number.');\n      return;\n    }\n\n    onCreate({ id: generate(), name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className=\"ContactForm__form\" action=\"URL\" onSubmit={submitHandler}>\n        <label className=\"ContactForm__label\" htmlFor=\"nameId\">\n          Name:\n        </label>\n        <input\n          className=\"ContactForm__input\"\n          name=\"name\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={changeHandler}\n        ></input>\n        <label className=\"ContactForm__label\" htmlFor=\"telId\">\n          Number:\n        </label>\n        <input\n          className=\"ContactForm__input\"\n          name=\"number\"\n          type=\"tel\"\n          autoComplete=\"off\"\n          value={number}\n          onChange={changeHandler}\n        ></input>\n        <button className=\"ContactForm__button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './ContactList.css';\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <div className=\"ContactList__container\">\n      <ul className=\"ContactList__list\">\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className=\"ContactList__list_item\">\n            <button\n              className=\"ContactList__delete_button\"\n              type=\"button\"\n              onClick={() => onDelete(id)}\n            >\n              Delete\n            </button>\n            <span className=\"ContactList__name\">{name}</span>\n            <span className=\"ContactList__dash\"> - </span>\n            <span className=\"ContactList__number\">{number}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './Filter.css';\n\nexport default function Filter({ onFilterChanged }) {\n  const inputHandler = e => {\n    onFilterChanged(e.target.value);\n  };\n\n  return (\n    <div className=\"Filter__container\">\n      <label className=\"Filter__label\" htmlFor=\"filterId\">\n        Find contacts by name:\n      </label>\n      <input\n        className=\"Filter__input\"\n        id=\"filterId\"\n        type=\"text\"\n        autoComplete=\"off\"\n        onChange={inputHandler}\n      ></input>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onFilterChanged: PropTypes.func.isRequired,\n};\n","import { SwitchTransition, CSSTransition } from 'react-transition-group';\r\nimport { useState, useEffect } from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  const [state, setState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setState(!state);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"titleContainer\">\r\n        <SwitchTransition mode={'out-in'}>\r\n          <CSSTransition\r\n            key={state}\r\n            addEndListener={(node, done) => {\r\n              node.addEventListener('transitionend', done, false);\r\n            }}\r\n            classNames=\"fade\"\r\n          >\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport { useState } from 'react';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Header from './components/Header';\n\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  const onCreate = newContact => {\n    if (contacts.find(({ name }) => name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    setContacts(state => [newContact, ...state]);\n  };\n\n  const onFilterChanged = filter => {\n    setFilter(filter);\n  };\n\n  const onDelete = removeItemId => {\n    setContacts(contacts => contacts.filter(({ id }) => id !== removeItemId));\n    saveContacts();\n  };\n\n  const filteredContacts = () => {\n    const f = filter.toLowerCase();\n    return contacts.filter(({ name }) => name.toLowerCase().includes(f));\n  };\n\n  const saveContacts = () => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  };\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <ContactForm onCreate={onCreate} />\n\n      <h2>Contacts</h2>\n      <Filter onFilterChanged={onFilterChanged} />\n      <ContactList contacts={filteredContacts()} onDelete={onDelete} />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}